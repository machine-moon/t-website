// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`renders Projects component correctly 1`] = `
<DocumentFragment>
  <div
    class="mywork"
    id="projects"
  >
    <div
      class="mywork-title"
    >
      <h1>
        My Projects
      </h1>
    </div>
    <div
      class="mywork-container"
    >
      <div
        class="project-card"
      >
        <img
          alt="tUnit"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            tUnit
          </h2>
          <p>
            Write tests that read like specifications, execute like lightning âš¡
          </p>
          <a
            href="https://github.com/machine-moon/tunit"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              GitHub
            </button>
          </a>
        </div>
      </div>
      <div
        class="project-card"
      >
        <img
          alt="CuMind"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            CuMind
          </h2>
          <p>
            A JAX-based reinforcement learning framework inspired by Google DeepMind's MuZero. It combines Monte Carlo Tree Search (MCTS) with a learned model to master environments like classic control problems.
          </p>
          <a
            href="https://github.com/machine-moon/CuMind"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              GitHub
            </button>
          </a>
        </div>
      </div>
      <div
        class="project-card"
      >
        <img
          alt="Vibe Check"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            Vibe Check
          </h2>
          <p>
            Vibecheck is an application that allows users to CRUD tweets and features a gameplay frontend to check-the-vibe based on tweets. It utilizes a Go backend with a RESTful API, Redis caching, and a React frontend.
          </p>
          <a
            href="https://github.com/machine-moon/vibecheck"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              Github
            </button>
          </a>
        </div>
      </div>
      <div
        class="project-card"
      >
        <img
          alt="T-Embedded"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            T-Embedded
          </h2>
          <p>
            This project contains my embedded work using the MSP432 microcontroller from Texas Instruments. Topics covered include ADC, GPIO, NVIC, UART, interrupts, timers, and concurrency using QNX.
          </p>
          <a
            href="https://github.com/machine-moon/t-embedded"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              GitHub
            </button>
          </a>
        </div>
      </div>
      <div
        class="project-card"
      >
        <img
          alt="Operating System Simulators"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            Operating System Simulators
          </h2>
          <p>
            A collection of simulators demonstrating process management, scheduling, and system calls.
          </p>
          <a
            href="https://github.com/machine-moon/syscall-simulator"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              Syscall Simulator
            </button>
          </a>
          <a
            href="https://github.com/machine-moon/process-simulator"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              Process Simulator
            </button>
          </a>
          <a
            href="https://github.com/machine-moon/scheduler-simulator"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              Scheduler Simulator
            </button>
          </a>
        </div>
      </div>
      <div
        class="project-card"
      >
        <img
          alt="T-Docker"
          src="test-file-stub"
        />
        <div
          class="project-overlay"
        >
          <h2>
            T-Docker
          </h2>
          <p>
            A streamlined suite of Docker Compose setups for easy application deployment on an NGINX Network
          </p>
          <a
            href="https://github.com/machine-moon/tdocker"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              GitHub
            </button>
          </a>
          <a
            href="https://github.com/machine-moon/tdocker"
            rel="noopener noreferrer"
            target="_blank"
          >
            <button
              class="project-button"
            >
              Demo (soon)
            </button>
          </a>
        </div>
      </div>
    </div>
    <div
      class="mywork-showmore"
    >
      <a
        href="https://github.com/machine-moon?tab=repositories"
        rel="noopener noreferrer"
        target="_blank"
      >
        <p>
          More Projects
        </p>
      </a>
      <div
        class="arrow-outward-icon"
      >
        <svg
          aria-hidden="true"
          class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-1umw9bq-MuiSvgIcon-root"
          data-testid="ArrowForwardIosIcon"
          focusable="false"
          viewBox="0 0 24 24"
        >
          <path
            d="M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z"
          />
        </svg>
      </div>
    </div>
  </div>
</DocumentFragment>
`;
